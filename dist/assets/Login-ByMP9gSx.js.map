{"version":3,"file":"Login-ByMP9gSx.js","sources":["../../src/pages/Auth/Login.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link, Navigate } from 'react-router-dom'\nimport { motion } from 'framer-motion'\nimport { EyeIcon, EyeSlashIcon } from '@heroicons/react/24/outline'\nimport { z } from 'zod'\n\nimport { useAuth } from '@hooks/useAuth'\nimport { useForm } from '@hooks/useForm'\nimport Button from '@components/UI/Button'\nimport Input from '@components/UI/Input'\nimport Card from '@components/UI/Card'\n\nconst loginSchema = z.object({\n  email: z.string().email('Please enter a valid email address'),\n  password: z.string().min(6, 'Password must be at least 6 characters'),\n  rememberMe: z.boolean().optional()\n})\n\ntype LoginFormData = z.infer<typeof loginSchema>\n\nconst Login = () => {\n  const [showPassword, setShowPassword] = useState(false)\n  const { login, isAuthenticated, isLoading } = useAuth()\n\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    getFieldProps,\n    getFieldError,\n    hasFieldError\n  } = useForm<LoginFormData>({\n    initialValues: {\n      email: '',\n      password: '',\n      rememberMe: false\n    },\n    validationSchema: loginSchema,\n    onSubmit: async (values) => {\n      await login(values)\n    }\n  })\n\n  // Redirect if already authenticated\n  if (isAuthenticated && !isLoading) {\n    return <Navigate to=\"/dashboard\" replace />\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-blue-50 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center p-4\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"w-full max-w-md\"\n      >\n        <div className=\"text-center mb-8\">\n          <div className=\"mx-auto w-16 h-16 bg-green-500 rounded-2xl flex items-center justify-center text-white text-2xl mb-4\">\n            ðŸŒ±\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100\">\n            Welcome back\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\n            Sign in to your Garden Hub account\n          </p>\n        </div>\n\n        <Card className=\"p-8\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <Input\n              {...getFieldProps('email')}\n              type=\"email\"\n              label=\"Email address\"\n              placeholder=\"Enter your email\"\n              error={getFieldError('email')}\n              autoComplete=\"email\"\n              required\n            />\n\n            <div>\n              <Input\n                {...getFieldProps('password')}\n                type={showPassword ? 'text' : 'password'}\n                label=\"Password\"\n                placeholder=\"Enter your password\"\n                error={getFieldError('password')}\n                autoComplete=\"current-password\"\n                rightIcon={\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"p-1 text-gray-400 hover:text-gray-600 focus:outline-none\"\n                  >\n                    {showPassword ? (\n                      <EyeSlashIcon className=\"w-5 h-5\" />\n                    ) : (\n                      <EyeIcon className=\"w-5 h-5\" />\n                    )}\n                  </button>\n                }\n                required\n              />\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <label className=\"flex items-center\">\n                <input\n                  {...getFieldProps('rememberMe')}\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300 rounded\"\n                />\n                <span className=\"ml-2 block text-sm text-gray-900 dark:text-gray-100\">\n                  Remember me\n                </span>\n              </label>\n\n              <Link\n                to=\"/forgot-password\"\n                className=\"text-sm text-green-600 hover:text-green-500 font-medium\"\n              >\n                Forgot password?\n              </Link>\n            </div>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              loading={isSubmitting}\n              disabled={isSubmitting}\n            >\n              Sign in\n            </Button>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Don't have an account?{' '}\n              <Link\n                to=\"/register\"\n                className=\"font-medium text-green-600 hover:text-green-500\"\n              >\n                Sign up\n              </Link>\n            </p>\n          </div>\n        </Card>\n\n        <div className=\"mt-8 text-center\">\n          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n            By signing in, you agree to our{' '}\n            <a href=\"#\" className=\"text-green-600 hover:text-green-500\">\n              Terms of Service\n            </a>{' '}\n            and{' '}\n            <a href=\"#\" className=\"text-green-600 hover:text-green-500\">\n              Privacy Policy\n            </a>\n          </p>\n        </div>\n      </motion.div>\n    </div>\n  )\n}\n\nexport default Login"],"names":["loginSchema","z.object","z.string","z.boolean","Login","showPassword","setShowPassword","useState","login","isAuthenticated","isLoading","useAuth","handleSubmit","isSubmitting","getFieldProps","getFieldError","useForm","values","jsxDEV","Navigate","this","motion","Card","Input","EyeSlashIcon","EyeIcon","Link","Button"],"mappings":"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"}