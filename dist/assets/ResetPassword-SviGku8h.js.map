{"version":3,"file":"ResetPassword-SviGku8h.js","sources":["../../src/pages/Auth/ResetPassword.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link, useSearchParams, Navigate } from 'react-router-dom'\nimport { motion } from 'framer-motion'\nimport { EyeIcon, EyeSlashIcon, CheckCircleIcon } from '@heroicons/react/24/outline'\nimport { z } from 'zod'\n\nimport { useForm } from '@hooks/useForm'\nimport { authService } from '@services/authService.ts'\nimport Button from '@components/UI/Button'\nimport Input from '@components/UI/Input'\nimport Card from '@components/UI/Card'\nimport toast from 'react-hot-toast'\n\nconst resetPasswordSchema = z.object({\n  password: z.string()\n    .min(8, 'Password must be at least 8 characters')\n    .regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/, 'Password must contain at least one uppercase letter, one lowercase letter, and one number'),\n  confirmPassword: z.string()\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"]\n})\n\ntype ResetPasswordFormData = z.infer<typeof resetPasswordSchema>\n\nconst ResetPassword = () => {\n  const [searchParams] = useSearchParams()\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [isCompleted, setIsCompleted] = useState(false)\n  \n  const token = searchParams.get('token')\n\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    isSubmitting,\n    getFieldProps,\n    getFieldError\n  } = useForm<ResetPasswordFormData>({\n    initialValues: {\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: resetPasswordSchema,\n    onSubmit: async (values) => {\n      if (!token) {\n        toast.error('Invalid reset token')\n        return\n      }\n\n      try {\n        await authService.resetPassword({\n          token,\n          password: values.password,\n          confirmPassword: values.confirmPassword\n        })\n        setIsCompleted(true)\n        toast.success('Password reset successfully!')\n      } catch (error) {\n        toast.error('Failed to reset password. The link may have expired.')\n      }\n    }\n  })\n\n  // Redirect if no token\n  if (!token) {\n    return <Navigate to=\"/forgot-password\" replace />\n  }\n\n  if (isCompleted) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-blue-50 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center p-4\">\n        <motion.div\n          initial={{ opacity: 0, scale: 0.95 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"w-full max-w-md\"\n        >\n          <Card className=\"p-8 text-center\">\n            <div className=\"w-16 h-16 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <CheckCircleIcon className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\n            </div>\n            \n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\n              Password reset successful\n            </h1>\n            \n            <p className=\"text-gray-600 dark:text-gray-400 mb-8\">\n              Your password has been successfully reset. You can now sign in with your new password.\n            </p>\n\n            <Link to=\"/login\">\n              <Button fullWidth>\n                Continue to sign in\n              </Button>\n            </Link>\n          </Card>\n        </motion.div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-blue-50 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center p-4\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"w-full max-w-md\"\n      >\n        <div className=\"text-center mb-8\">\n          <div className=\"mx-auto w-16 h-16 bg-green-500 rounded-2xl flex items-center justify-center text-white text-2xl mb-4\">\n            ðŸŒ±\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100\">\n            Reset password\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\n            Enter your new password below\n          </p>\n        </div>\n\n        <Card className=\"p-8\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <Input\n              {...getFieldProps('password')}\n              type={showPassword ? 'text' : 'password'}\n              label=\"New password\"\n              placeholder=\"Enter your new password\"\n              error={getFieldError('password')}\n              helperText=\"Must be at least 8 characters with uppercase, lowercase, and number\"\n              autoComplete=\"new-password\"\n              rightIcon={\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"p-1 text-gray-400 hover:text-gray-600 focus:outline-none\"\n                >\n                  {showPassword ? (\n                    <EyeSlashIcon className=\"w-5 h-5\" />\n                  ) : (\n                    <EyeIcon className=\"w-5 h-5\" />\n                  )}\n                </button>\n              }\n              required\n            />\n\n            <Input\n              {...getFieldProps('confirmPassword')}\n              type={showConfirmPassword ? 'text' : 'password'}\n              label=\"Confirm new password\"\n              placeholder=\"Confirm your new password\"\n              error={getFieldError('confirmPassword')}\n              autoComplete=\"new-password\"\n              rightIcon={\n                <button\n                  type=\"button\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  className=\"p-1 text-gray-400 hover:text-gray-600 focus:outline-none\"\n                >\n                  {showConfirmPassword ? (\n                    <EyeSlashIcon className=\"w-5 h-5\" />\n                  ) : (\n                    <EyeIcon className=\"w-5 h-5\" />\n                  )}\n                </button>\n              }\n              required\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              loading={isSubmitting}\n              disabled={isSubmitting}\n            >\n              Reset password\n            </Button>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <Link\n              to=\"/login\"\n              className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100\"\n            >\n              Back to sign in\n            </Link>\n          </div>\n        </Card>\n      </motion.div>\n    </div>\n  )\n}\n\nexport default ResetPassword"],"names":["resetPasswordSchema","z.object","z.string","data","ResetPassword","searchParams","useSearchParams","showPassword","setShowPassword","useState","showConfirmPassword","setShowConfirmPassword","isCompleted","setIsCompleted","token","handleSubmit","isSubmitting","getFieldProps","getFieldError","useForm","values","toast","authService","jsxDEV","motion","Card","CheckCircleIcon","this","Link","Button","Input","EyeSlashIcon","EyeIcon","Navigate"],"mappings":"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"}